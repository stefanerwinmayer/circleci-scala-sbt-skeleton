version: 2.1

executors:
  docker:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/scala-repo

commands:
  execute:
    description: "Executes commands in an"
    parameters:
      this:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            - v1-dependencies-
      - run: << parameters.this >>
      - save_cache:
          key: v1-dependencies-{{ checksum "build.sbt" }}
          paths:
            - ~/.iv2/cache/
            - ~/.sbt/
      - persist_to_workspace:
          root: .
          paths:
            - target
            - project/target
            - project/project/target

jobs:
  compile:
    executor: docker
    steps:
      - execute:
          this: "sbt compile test:compile"

  code_formatting:
    executor: docker
    steps:
      - execute:
          this: "sbt scalafmtSbtCheck"

  dependencies_up_to_date:
    executor: docker
    steps:
      - execute:
          this: "sbt dependencyUpdatesFailBuild"

  sonar_scan:
    executor: docker
    steps:
      - execute:
          this: "sbt sonarScan"

  test:
    executor: docker
    steps:
      - execute:
          this: "sbt test"

  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Compile
          command: cat /dev/null | sbt test:compile

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      - run:
          name: Run tests
          command: cat /dev/null | sbt test:test

workflows:
  main:
    jobs:
      - compile
      - code_formatting:
          requires:
            - compile
      - dependencies_up_to_date:
          requires:
            - code_formatting
      - test:
          requires:
            - dependencies_up_to_date
      - sonar_scan:
          requires:
            - test